
The RDBMS does not have direct support for customer. 
The data objects such as orders, order_line_item do not support per customer data.  
The configuration object has global data and per customer data. 
This is ok as in practice each customer will have different jdbc url, login user and login password. The RDBMS instance exists only to simulate the customer.
The data from each customer will be stored in a per customer directory. Under that the incremental update will be stored in a per increment directory.

The code does two functions: 
Part 1:
1)Simulate customer schema by creating a postgres database instance(InitDB)
2)Populate the instance with random data(InitCustomerData)
3)Make random changes to this data in order to simulate daily changes to the customer database. (ModifyCustomerData)

Part 2: 
1)Extract the changes from the database since the last extract operation and write them out as binary data files that can be processed by MVDB module(ExtractDBChanges)
e.g. 
~/data/etl/alpha/20130702234321: This directory contains changes for customer 'alpha' extracted at the timestamp '20130702234321' 
Format:YYYYMMDDHHmmss - Year, month, day, hour, minute, second
Year = 2013, month = 07, day = 02, hour = 23, minute = 43, second = 21
2)Test that this data can be scanned correctly. (ScanDBChanges)
